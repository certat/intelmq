os: linux
dist: xenial
language: python
env:
  - requirements=true
  - requirements=false
python:
  - 3.6
  - 3.7
  - 3.8
jobs:
  include:
  - python: 3.8
    env: mode=documentation
before_install:
  - if [[ -v requirements ]]; then curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.1-amd64.deb; fi
  - if [[ -v requirements ]]; then sudo dpkg -i --force-confnew elasticsearch-7.6.1-amd64.deb; fi
  - if [[ -v requirements ]]; then sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options; fi
  - if [[ -v requirements ]]; then sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options; fi
  - if [[ -v requirements ]]; then echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options; fi
  - if [[ -v requirements ]]; then sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch; fi
  - if [[ -v requirements ]]; then sudo systemctl start elasticsearch; fi
install:
  - set -e
  - if [[ $requirements == true ]]; then for file in intelmq/bots/*/*/REQUIREMENTS.txt; do pip install -r $file; done; fi
  - if [[ -v requirements ]]; then pip install Cerberus!=1.3 codecov pyyaml requests_mock; fi
  - if [[ -v requirements ]]; then sudo sed -i '/^Defaults\tsecure_path.*$/ d' /etc/sudoers; fi
  - if [[ -v requirements ]]; then sudo pip install .; fi
  - if [[ -v requirements ]]; then sudo intelmqsetup --skip-ownership; fi
  - if [[ $mode == documentation ]]; then pip install -r docs/requirements.txt; fi
before_script:
  - if [[ $requirements == true ]] ; then psql -c "CREATE USER intelmq WITH SUPERUSER" -U postgres; fi
  - if [[ $requirements == true ]] ; then psql -c "CREATE DATABASE intelmq" -U intelmq template1; fi
  - if [[ $requirements == true ]] ; then psql -c "GRANT ALL PRIVILEGES ON DATABASE intelmq TO intelmq" -U intelmq; fi
  - if [[ $requirements == true ]] ; then intelmq_psql_initdb; fi
  - if [[ $requirements == true ]] ; then sed -i 's/events/tests/g' /tmp/initdb.sql; fi
  - if [[ $requirements == true ]] ; then psql -v ON_ERROR_STOP=on -f /tmp/initdb.sql intelmq -U intelmq; fi
  - if [[ -v requirements ]]; then gpg --import intelmq/tests/assets/key-public.pgp; fi
  - if [[ $requirements == true ]]; then sudo bash -c 'echo "[rabbitmq_management]." > /etc/rabbitmq/enabled_plugins' && sudo systemctl restart rabbitmq-server; fi
script:
  - if [[ $requirements == true ]]; then TZ=utc INTELMQ_TEST_DATABASES=1 INTELMQ_TEST_EXOTIC=1 nosetests --with-coverage --cover-package=intelmq --cover-branches; find contrib/ -name "test*.py" -exec nosetests {} \+; elif [[ $requirements == false ]]; then nosetests --with-coverage --cover-package=intelmq --cover-branches; fi
  - if [[ $mode == documentation ]]; then pushd docs; fi
  - if [[ $mode == documentation ]]; then make html; fi
  - if [[ $mode == documentation ]]; then popd; fi
services:
  - redis
  - postgresql
  - mongodb
  - rabbitmq
after_success:
  - if [[ -v requirements ]]; then codecov; fi
addons:
  postgresql: "9.4"
  apt:
    packages:
      - rabbitmq-server
